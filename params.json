{"name":"Ruby LLVM Script","body":"## Introduction\r\n\r\nThis project aims to make a simple, clean interface on top of ruby-llvm to make it \r\neasier for one to write ruby-llvm programs and libraries. It is also very well documented,\r\nif I do say so myself.\r\n\r\nruby-llvm-script has been tested on OS X 10.7 using the following Ruby interpreters:\r\n\r\n* MRI 1.8.7-p357\r\n* MRI 1.9.3-p194\r\n\r\n## Roadmap\r\n* Make sure everything works.\r\n* *Requests appreciated.*\r\n\r\n## Getting Started\r\n\r\n<table>\r\n  <tr>\r\n    <th>Notice</th><td>ruby-llvm-script is currently not released as a gem (will be soon). You will, for now, have to rake it from the source if you wish to use it.</td>\r\n  </tr>\r\n</table>\r\n\r\nIf you would like to see what ruby-llvm-script feels like before getting started, take a look at the [Hello World program](https://github.com/tophat/ruby-llvm-script/wiki/Hello-World). Otherwise, you will need to [install LLVM and ruby-llvm-script](https://github.com/tophat/ruby-llvm-script/wiki/Installation) first. After you are done with that, you might wish to take a look at the breakdowns of the example programs in the samples directory: \r\n\r\n1. Hello World: [hello.rb](https://github.com/tophat/ruby-llvm-script/wiki/Hello-World)\r\n2. Factorial: [factorial.rb](https://github.com/tophat/ruby-llvm-script/wiki/Factorial)\r\n3. I/O: [io.rb](https://github.com/tophat/ruby-llvm-script/wiki/IO)\r\n4. Conditionals: [cond.rb](https://github.com/tophat/ruby-llvm-script/wiki/Conditionals)\r\n5. Function Pointers: [fp.rb](https://github.com/tophat/ruby-llvm-script/wiki/Function-Pointers)\r\n\r\nIt is advised to look at them in the above order because as each builds upon the last.\r\n\r\n## Moving On\r\n\r\nYou might want to look at the ruby-llvm documentation at <http://jvoorhis.com/ruby-llvm> and the LLVM assembly language reference at <http://llvm.org/docs/LangRef.html> if you want to get in real deep.\r\n","tagline":"Simple, clean interface for ruby-llvm.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}